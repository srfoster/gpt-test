{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction ListAdventuresComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const adventure_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(adventure_r1.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(adventure_r1.category);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(adventure_r1.mileage);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(adventure_r1.estimated_calories);\n  }\n}\nexport class ListAdventuresComponent {\n  // Inject HttpClient into your component or service.\n  constructor(http) {\n    this.http = http;\n    this.adventures = [];\n  }\n  ngOnInit() {\n    // Assuming you want to list adventures for user with ID 1. Adjust accordingly.\n    const userId = 1;\n    const apiUrl = `http://127.0.0.1:5000/list_adventures/${userId}`;\n    this.http.get(apiUrl).subscribe(data => {\n      this.adventures = data;\n    }, error => {\n      console.error(error); // Handle error response\n    });\n  }\n}\n_class = ListAdventuresComponent;\n_class.ɵfac = function ListAdventuresComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-list-adventures\"]],\n  decls: 16,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ListAdventuresComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Adventures\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\", 1)(4, \"thead\")(5, \"tr\")(6, \"th\");\n      i0.ɵɵtext(7, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Mileage\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Estimated Calories\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"tbody\");\n      i0.ɵɵtemplate(15, ListAdventuresComponent_tr_15_Template, 9, 4, \"tr\", 2);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.adventures);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","adventure_r1","date","category","mileage","estimated_calories","ListAdventuresComponent","constructor","http","adventures","ngOnInit","userId","apiUrl","get","subscribe","data","error","console","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","ListAdventuresComponent_Template","rf","ctx","ɵɵtemplate","ListAdventuresComponent_tr_15_Template","ɵɵproperty"],"sources":["/mnt/c/Users/linds/Dev/gpt-test/frontend/hello-world-angular/src/app/components/list-adventures/list-adventures.component.ts","/mnt/c/Users/linds/Dev/gpt-test/frontend/hello-world-angular/src/app/components/list-adventures/list-adventures.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-list-adventures',\n  templateUrl: './list-adventures.component.html',\n  styleUrls: ['./list-adventures.component.css']\n})\nexport class ListAdventuresComponent implements OnInit {\n\n  adventures: any[] = [];\n\n  // Inject HttpClient into your component or service.\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    // Assuming you want to list adventures for user with ID 1. Adjust accordingly.\n    const userId = 1;\n    const apiUrl = `http://127.0.0.1:5000/list_adventures/${userId}`;\n\n    this.http.get(apiUrl).subscribe((data: any) => {\n      this.adventures = data;\n    }, error => {\n      console.error(error);  // Handle error response\n    });\n  }\n}\n","<div class=\"container\">\n  <h2>Adventures</h2>\n\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th>Date</th>\n        <th>Category</th>\n        <th>Mileage</th>\n        <th>Estimated Calories</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let adventure of adventures\">\n        <td>{{ adventure.date }}</td>\n        <td>{{ adventure.category }}</td>\n        <td>{{ adventure.mileage }}</td>\n        <td>{{ adventure.estimated_calories }}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n"],"mappings":";;;;;;ICaMA,EAAA,CAAAC,cAAA,SAAyC;IACnCD,EAAA,CAAAE,MAAA,GAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC7BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAwB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACjCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAChCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAkC;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAHvCH,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,iBAAA,CAAAC,YAAA,CAAAC,IAAA,CAAoB;IACpBP,EAAA,CAAAI,SAAA,GAAwB;IAAxBJ,EAAA,CAAAK,iBAAA,CAAAC,YAAA,CAAAE,QAAA,CAAwB;IACxBR,EAAA,CAAAI,SAAA,GAAuB;IAAvBJ,EAAA,CAAAK,iBAAA,CAAAC,YAAA,CAAAG,OAAA,CAAuB;IACvBT,EAAA,CAAAI,SAAA,GAAkC;IAAlCJ,EAAA,CAAAK,iBAAA,CAAAC,YAAA,CAAAI,kBAAA,CAAkC;;;ADT9C,OAAM,MAAOC,uBAAuB;EAIlC;EACAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,UAAU,GAAU,EAAE;EAGiB;EAEvCC,QAAQA,CAAA;IACN;IACA,MAAMC,MAAM,GAAG,CAAC;IAChB,MAAMC,MAAM,GAAG,yCAAyCD,MAAM,EAAE;IAEhE,IAAI,CAACH,IAAI,CAACK,GAAG,CAACD,MAAM,CAAC,CAACE,SAAS,CAAEC,IAAS,IAAI;MAC5C,IAAI,CAACN,UAAU,GAAGM,IAAI;IACxB,CAAC,EAAEC,KAAK,IAAG;MACTC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC,CAAE;IACzB,CAAC,CAAC;EACJ;;SAjBWV,uBAAuB;;mBAAvBA,MAAuB,EAAAX,EAAA,CAAAuB,iBAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;QAAvBd,MAAuB;EAAAe,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRpChC,EAAA,CAAAC,cAAA,aAAuB;MACjBD,EAAA,CAAAE,MAAA,iBAAU;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAEnBH,EAAA,CAAAC,cAAA,eAAqB;MAGXD,EAAA,CAAAE,MAAA,WAAI;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACbH,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,eAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACjBH,EAAA,CAAAC,cAAA,UAAI;MAAAD,EAAA,CAAAE,MAAA,eAAO;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAChBH,EAAA,CAAAC,cAAA,UAAI;MAAAD,EAAA,CAAAE,MAAA,0BAAkB;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAG/BH,EAAA,CAAAC,cAAA,aAAO;MACLD,EAAA,CAAAkC,UAAA,KAAAC,sCAAA,gBAKK;MACPnC,EAAA,CAAAG,YAAA,EAAQ;;;MANoBH,EAAA,CAAAI,SAAA,IAAa;MAAbJ,EAAA,CAAAoC,UAAA,YAAAH,GAAA,CAAAnB,UAAA,CAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}